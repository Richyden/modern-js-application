{"version":3,"sources":["assets/modules/fetchCharacter.js","assets/modules/displayCharacter.js","assets/modules/viewCharacter.js","assets/modules/createCharacter.js","assets/modules/deleteCharacter.js","assets/index.js"],"names":["fetchCharacter","fetch","api","json","data","console","log","error","tabId","Array","displayCharacter","forEach","name","shortDescription","image","description","id","temp","document","querySelector","target","copy","cloneNode","content","innerText","src","appendChild","push","viewCharacter","getElementsByClassName","buttonView","nameCard","signaleticsCard","longDescriptionCard","imgCard","from","querySelectorAll","btn","i","addEventListener","nameModal","signaleticsModal","descriptionModal","imgModal","allVal","createCharacter","values","map","value","trim","method","headers","body","JSON","stringify","post","location","reload","ok","status","erasedCharacter","button","erasesConfirm","confirm","answer","deleteChar","alert","apiChar","event","fileList","files","reader","FileReader","onloadend","result","replace","readAsDataURL","then","element"],"mappings":"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","file":"assets.7105eb30.js","sourceRoot":"..","sourcesContent":["// **** Fetch our API ****\n\nasync function fetchCharacter() { \n    try{\n        const api = await fetch('https://character-database.becode.xyz/characters');\n        const data = await api.json();\n        console.log(data);\n        return data;\n\n    }catch(error) {\n        console.error(error);\n    }\n}\n\nexport {fetchCharacter};","// **** Display Heroes ****\nconst tabId = new Array(); //Créé un nouveau tableau qu'on utilisera pour ajouter les IDs.\n\nfunction displayCharacter(data) {\n    data.forEach(({name, shortDescription, image, description, id}) => {\n        const temp = document.querySelector(\"#template\");\n        const target = document.querySelector(\"#target\");\n        const copy = temp.cloneNode(true).content;\n\n        copy.querySelector(\".name\").innerText = name;\n        copy.querySelector(\".signaletics\").innerText = shortDescription;\n        copy.querySelector(\".image\").src = `data:image/*;base64,${image}`;\n        copy.querySelector(\".description\").innerText = description;\n\n        target.appendChild(copy);\n\n        tabId.push(id);\n    });\n\n    console.log(tabId);\n}\n\nexport {displayCharacter};","// **** View Character ****\n\nfunction viewCharacter() {\n    const buttonView = document.getElementsByClassName(\"cardBtn\");\n    \n    const nameCard = document.getElementsByClassName(\"name\");\n    const signaleticsCard = document.getElementsByClassName(\"signaletics\");\n    const longDescriptionCard = document.getElementsByClassName(\"description\");\n    const imgCard = document.getElementsByClassName(\"image\");\n    \n    Array.from(document.querySelectorAll(\".cardBtn\")).forEach((btn, i) => {\n        btn.addEventListener(\"click\", () => {\n            let nameModal = document.querySelector(\".modal-title\");\n            let signaleticsModal = document.querySelector(\".signaleticsModal\");\n            let descriptionModal = document.querySelector(\".cardModal\");\n            let imgModal = document.querySelector(\".imgModal\");\n    \n            nameModal.innerText = nameCard[i].innerText;\n            signaleticsModal.innerText = signaleticsCard[i].innerText;\n            descriptionModal.innerText = longDescriptionCard[i].innerText;\n            imgModal.src = imgCard[i].src;\n        })\n    });\n}\n\nexport {viewCharacter};","// **** Create a character ****\nconst allVal = Array.from(document.querySelectorAll(\"input\"));\n\nfunction createCharacter(image) {\n    document.querySelector(\"#addBtn\").addEventListener(\"click\", async () => {\n        const values = allVal.map(({value}) => value.trim());\n        const [name, shortDescription, description] = values;\n        const post = await fetch(\"https://character-database.becode.xyz/characters\", {\n            method : \"POST\",\n            headers : {\n                \"Content-Type\": \"application/json\",\n            },\n            body : JSON.stringify({\n                name,\n                shortDescription,\n                description,\n                image,\n            })\n        })\n        document.location.reload();\n\n        if(!post.ok) {\n            console.error(post.status);\n        }\n    })\n}\n\nexport {createCharacter, allVal};","// **** Erased a character **** \n\nconst tabId = new Array();\n\nfunction erasedCharacter(image) {\n    Array.from(document.querySelectorAll(\".btnDelete\")).forEach((button, i) => {\n        button.addEventListener(\"click\", async () => {\n            const erasesConfirm = confirm(\"Do you want to delete this character?\");\n\n            if(erasesConfirm) {\n                const id = tabId[i];\n                console.log(id);\n\n                try {\n                    const answer = await fetch (`https://character-database.becode.xyz/characters/${id}`, {\n                        method : 'DELETE',\n                        headers : {\n                            \"Content-Type\": \"application/json\",\n                        },\n                    });\n\n                    const deleteChar = await answer.json();\n                    console.log(deleteChar);\n                    location.reload();\n\n                    if(!answer.ok) {\n                        console.error(answer.status);\n                    }\n\n                } catch(error) {\n                    console.error(error);\n                }\n            }else {\n                alert(\"This character has not been deleted!\");\n            }\n        })\n    })\n}\n\nexport {erasedCharacter};","\n\n    import {fetchCharacter} from \"./modules/fetchCharacter.js\";\n    import {displayCharacter} from \"./modules/displayCharacter.js\";\n    import {viewCharacter} from \"./modules/viewCharacter.js\";\n    import {createCharacter} from \"./modules/createCharacter.js\";\n    //import {editCharacter} from \"./modules/editCharacter.js\";\n    import {erasedCharacter} from \"./modules/deleteCharacter.js\";\n    //   **** Get api and show elements ****\n\n    /*  **** MAIN ****  */\n\n    let apiChar = fetchCharacter();\n    let image = \"\";\n    document.querySelector(\"#inputImg\").addEventListener(\"change\", (event) => {\n        const fileList = event.target.files[0];\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n            image = reader.result.replace('data:', '').replace(/^.+,/, '');\n            console.log(image);\n        };\n        reader.readAsDataURL(fileList);\n    });\n\n    apiChar.then((element) => {\n        displayCharacter(element);\n        viewCharacter();\n        createCharacter(image);\n        //editCharacter();\n        erasedCharacter(image);\n    })\n"]}